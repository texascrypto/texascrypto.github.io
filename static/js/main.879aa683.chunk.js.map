{"version":3,"sources":["MyComponent.js","App.js","reportWebVitals.js","index.js"],"names":["MyComponent","useState","defaultAccount","setDefaultAccount","errorMessage","setErrorMessage","connectText","setConnectText","statusText","setStatus","provider","setProvider","signer","setSigner","contract","setContract","price","setPrice","size","setSize","sold","setSold","maxMint","setMaxMint","contractAddress","connectWalletHandler","window","ethereum","request","method","then","result","askRightNetwork","accountChangedHandler","ethers","providers","Web3Provider","localStorage","JSON","parse","console","log","set_provide_walletconnect","params","chainId","newAccount","tmpProvider","pollingInterval","updateEthers","document","getElementsByClassName","style","style_element","eval","a","tempProvider","tempSigner","getSigner","tempContract","Contract","Chummy","abi","pri","stringPri","toString","utils","formatEther","maxSupply","siz","toNumber","currentSupply","sol","max","disabled","backgroundColor","innerText","walletConnectProvider","WalletConnectProvider","infuraId","qrcode","enable","Disconnect","event","clear","eth_accounts","permissions","Mint","preventDefault","addr","target","value","amnt","parseEther","mint","gasLimit","tx","wait","receipt","className","id","in","type","values","onClick","onSubmit","placeholder","min","step","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.879aa683.chunk.js","sourcesContent":["import WalletConnectProvider from '@walletconnect/web3-provider';\r\nimport React, { useState } from 'react';\r\nimport {ethers} from 'ethers';\r\nimport Chummy from './Chummy.json';\r\nimport './MyComponent.css';\r\nconst MyComponent = () => {\r\n\r\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [connectText, setConnectText] = useState('Connect Your Wallet');\r\n\tconst [statusText, setStatus] = useState('waiting');\r\n\r\n\tconst [provider, setProvider] = useState(null);\r\n\tconst [signer, setSigner] = useState(null);\r\n\tconst [contract, setContract] = useState(null);\r\n\r\n\tconst [price, setPrice] = useState(0.08);\r\n\tconst [size, setSize] = useState(1500);\r\n\tconst [sold, setSold] = useState(\"?\");\r\n\tconst [maxMint, setMaxMint] = useState(10);\r\n\r\n\tconst contractAddress = \"0x75D6D90F712493B6d4198c3822713321973536d3\";\r\n\r\n\tconst connectWalletHandler = () => {\r\n\t\tif (window.ethereum) {\r\n\t\t\twindow.ethereum.request({method: 'eth_requestAccounts'}).then(result => {\r\n\t\t\t\taskRightNetwork()\r\n\t\t\t\taccountChangedHandler(result[0], new ethers.providers.Web3Provider(window.ethereum));\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tif (\"walletconnect\" in localStorage) {\r\n\t\t\t\tif (JSON.parse(localStorage['walletconnect'])['connected'] == true) {\r\n\t\t\t\t\tconsole.log(\"Connected wallet already\");\r\n\t\t\t\t\tset_provide_walletconnect();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetErrorMessage(\"If you would like to use Metamask, make sure it is installed first.\");\r\n\t\t\t\tset_provide_walletconnect();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst askRightNetwork = () => {\r\n\t\twindow.ethereum.request({\r\n\t\t\tmethod: \"wallet_switchEthereumChain\",\r\n\t\t\tparams: [{\r\n\t\t\t\tchainId: \"0x1\" //mainnet\t\r\n\t\t\t}]\r\n\t\t});\r\n\t}\r\n\r\n\tconst accountChangedHandler = (newAccount, tmpProvider) => {\r\n\t\ttmpProvider.pollingInterval = 8500;\r\n\t\tconsole.log(tmpProvider)\r\n\t\tsetDefaultAccount(newAccount);\r\n\t\tupdateEthers(tmpProvider);\r\n\t\tsetConnectText('Wallet Connected');\r\n\t\tdocument.getElementsByClassName(\"form\")[0].style = \"display: block;\";\r\n\t\tdocument.getElementsByClassName(\"connect\")[0].style = \"display: none;\";\r\n\t\tstyle_element();\r\n\t}\r\n\tfunction style_element() {\r\n\t\teval(`(function( $ ) {\r\n\r\n\t\t\t$.fn.numberstyle = function(options) {\r\n\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * Default settings\r\n\t\t\t\t */\r\n\t\t\t\tvar settings = $.extend({\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\tstep: undefined,\r\n\t\t\t\t\tmin: undefined,\r\n\t\t\t\t\tmax: undefined\r\n\t\t\t\t}, options );\r\n\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * Init every element\r\n\t\t\t\t */\r\n\t\t\t\treturn this.each(function(i) {\r\n\t\t\t\t\t\t\r\n\t\t\t  /*\r\n\t\t\t   * Base options\r\n\t\t\t   */\r\n\t\t\t  var input = $(this);\r\n\t\t\t\t  \r\n\t\t\t\t\t/*\r\n\t\t\t   * Add new DOM\r\n\t\t\t   */\r\n\t\t\t  var container = document.createElement('div'),\r\n\t\t\t\t  btnAdd = document.createElement('div'),\r\n\t\t\t\t  btnRem = document.createElement('div'),\r\n\t\t\t\t  min = (settings.min) ? settings.min : input.attr('min'),\r\n\t\t\t\t  max = (settings.max) ? settings.max : input.attr('max'),\r\n\t\t\t\t  value = (settings.value) ? settings.value : parseFloat(input.val());\r\n\t\t\t  container.className = 'numberstyle-qty';\r\n\t\t\t  btnAdd.className = (max && value >= max ) ? 'qty-btn qty-add disabled' : 'qty-btn qty-add';\r\n\t\t\t  btnAdd.innerHTML = '+';\r\n\t\t\t  btnRem.className = (min && value <= min) ? 'qty-btn qty-rem disabled' : 'qty-btn qty-rem';\r\n\t\t\t  btnRem.innerHTML = '-';\r\n\t\t\t  input.wrap(container);\r\n\t\t\t  input.closest('.numberstyle-qty').prepend(btnRem).append(btnAdd);\r\n\t\t\r\n\t\t\t  /*\r\n\t\t\t   * Attach events\r\n\t\t\t   */\r\n\t\t\t  // use .off() to prevent triggering twice\r\n\t\t\t  $(document).off('click','.qty-btn').on('click','.qty-btn',function(e){\r\n\t\t\t\t\r\n\t\t\t\tvar input = $(this).siblings('input'),\r\n\t\t\t\t\tsibBtn = $(this).siblings('.qty-btn'),\r\n\t\t\t\t\tstep = (settings.step) ? parseFloat(settings.step) : parseFloat(input.attr('step')),\r\n\t\t\t\t\tmin = (settings.min) ? settings.min : ( input.attr('min') ) ? input.attr('min') : undefined,\r\n\t\t\t\t\tmax = (settings.max) ? settings.max : ( input.attr('max') ) ? input.attr('max') : undefined,\r\n\t\t\t\t\toldValue = parseFloat(input.val()),\r\n\t\t\t\t\tnewVal;\r\n\t\t\t\t\r\n\t\t\t\t//Add value\r\n\t\t\t\tif ( $(this).hasClass('qty-add') ) {   \r\n\t\t\t\t  \r\n\t\t\t\t  newVal = (oldValue >= max) ? oldValue : oldValue + step,\r\n\t\t\t\t  newVal = (newVal > max) ? max : newVal;\r\n\t\t\t\t  \r\n\t\t\t\t  if (newVal == max) {\r\n\t\t\t\t\t$(this).addClass('disabled');\r\n\t\t\t\t  }\r\n\t\t\t\t  sibBtn.removeClass('disabled');\r\n\t\t\t\t \r\n\t\t\t\t//Remove value\r\n\t\t\t\t} else {\r\n\t\t\t\t  \r\n\t\t\t\t  newVal = (oldValue <= min) ? oldValue : oldValue - step,\r\n\t\t\t\t  newVal = (newVal < min) ? min : newVal; \r\n\t\t\t\t  \r\n\t\t\t\t  if (newVal == min) {\r\n\t\t\t\t\t$(this).addClass('disabled');\r\n\t\t\t\t  }\r\n\t\t\t\t  sibBtn.removeClass('disabled');\r\n\t\t\t\t  \r\n\t\t\t\t}\r\n\t\t\t\t  \r\n\t\t\t\t//Update value\r\n\t\t\t\tinput.val(newVal).trigger('change');\r\n\t\t\t\t\t\r\n\t\t\t  });\r\n\t\t\t  \r\n\t\t\t  input.on('change',function(){\r\n\t\t\t\t\r\n\t\t\t\tconst val = parseFloat(input.val()),\r\n\t\t\t\t\t  min = (settings.min) ? settings.min : ( input.attr('min') ) ? input.attr('min') : undefined,\r\n\t\t\t\t\t\tmax = (settings.max) ? settings.max : ( input.attr('max') ) ? input.attr('max') : undefined;\r\n\t\t\t\t\r\n\t\t\t\tif ( val > max ) {\r\n\t\t\t\t  input.val(max);   \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif ( val < min ) {\r\n\t\t\t\t  input.val(min);\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t  \r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\r\n\t\t  \r\n\t\t  /*\r\n\t\t   * Init\r\n\t\t   */\r\n\t\t  \r\n\t\t\t$('.numberstyle').numberstyle();\r\n\t\t\r\n\t\t}( jQuery ));\r\n\t\t\r\n\t\t`);\r\n\t}\r\n\r\n\tasync function updateEthers(tmpProvider) {\r\n\t\tlet tempProvider = tmpProvider; //new ethers.providers.Web3Provider(window.ethereum);\r\n\t\tsetProvider(tempProvider);\r\n\r\n\t\tlet tempSigner = tempProvider.getSigner();\r\n\t\tsetSigner(tempSigner);\r\n\r\n\t\tlet tempContract = new ethers.Contract(\r\n\t\t\tcontractAddress,\r\n\t\t\tChummy.abi,\r\n\t\t\ttempSigner\r\n\t\t);\r\n\t\tsetContract(tempContract);\r\n\t\tlet pri = await tempContract.price();\r\n\t\tlet stringPri = pri.toString();\r\n\t\tconsole.log(stringPri);\r\n\t\tsetPrice(ethers.utils.formatEther(stringPri));\r\n\t\tlet siz = await tempContract.maxSupply();\r\n\t\tsetSize(siz.toNumber());\r\n\t\tlet sol = await tempContract.currentSupply();\r\n\t\tsetSold(sol.toNumber());\r\n\t\tlet max = await tempContract.maxMint();\r\n\t\tsetMaxMint(max.toNumber());\r\n\t\tdocument.getElementsByClassName(\"mint\")[0].disabled = true;\r\n\t\tdocument.getElementsByClassName(\"mint\")[0].style.backgroundColor = \"grey\";\r\n\t\tdocument.getElementsByClassName(\"mint\")[0].innerText = \"Mint\";\r\n\t}\r\n\r\n\tasync function set_provide_walletconnect() {\r\n\t\tconsole.log(\"Using WConnect!!\")\r\n\t\tconst walletConnectProvider = new WalletConnectProvider({\r\n\t\t\tinfuraId: \"5a5c2c45eb2649c882058fc159fc0e13\",\r\n\t\t\tchainId: 1,\r\n\t\t\tpollingInterval: 7500,\r\n\t\t\tqrcode: true\r\n\t\t  });\r\n\t\t  await walletConnectProvider.enable();\r\n\t\t  accountChangedHandler(JSON.parse(localStorage['walletconnect'])['accounts'][0], new ethers.providers.Web3Provider(walletConnectProvider));\r\n\t}\r\n\tasync function Disconnect(event) {\r\n\t\tlocalStorage.clear();\r\n\t\ttry {\r\n\t\t\tconst permissions = await window.ethereum.request({\r\n\t\t\t\tmethod: 'wallet_requestPermissions',\r\n\t\t\t\tparams: [{\r\n\t\t\t\teth_accounts: {},\r\n\t\t\t\t}]\r\n\t\t\t});\r\n\t\t} catch(e) {\r\n\t\t}\r\n\t\teval(\"location.reload();\");\r\n\t}\r\n\tasync function Mint(event) {\r\n\t\tevent.preventDefault();\r\n\t\tlet addr = event.target[0].value;\r\n\t\tlet amnt = event.target[1].value;\r\n\t\tlet pri = ethers.utils.parseEther(price);\r\n\t\ttry {\r\n\t\t\tsetStatus(\"mint\")\r\n\t\t\tlet tx = await contract.mint(addr.toString(), amnt.toString(), { value: (pri * amnt).toString(), gasLimit: (350000*amnt).toString() });\r\n\t\t\tlet receipt = await tx.wait();\r\n\t\t\tconsole.log(receipt);\r\n\t\t\tsetStatus(\"complete\")\r\n\t\t\teval('$.notify(\"You have successfully minted!\", \"success\");')\r\n\t\t\teval('$.notify(\"Check OpenSea to see what you got!\", \"success\");')\r\n\t\t\ttry {\r\n\t\t\t\tsetSold(sold+1);\r\n\t\t\t} catch {\r\n\t\t\t\teval('$.notify(\"Mint was successful! However, the webpage is not loading properly.\", \"success\");')\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\teval('$.notify(\"Transaction failed! Are you whitelisted?\", \"warn\");')\r\n\t\t\tsetStatus(\"failed\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t  <div className=\"bg-black w-full pb-12 pt-10 text-center text-white rounded-lg justify-center items-center px-8 flex flex-col gap-2 snipcss-6wpUk\">\r\n\t\t    <div id=\"container\">\r\n\t\t      <span id=\"text1\"></span>\r\n\t\t      <span id=\"text2\"></span>\r\n\t\t    </div>\r\n\t\t    <svg id=\"filters\">\r\n\t\t      <defs>\r\n\t\t        <filter id=\"threshold\">\r\n\t\t          <feColorMatrix in=\"SourceGraphic\" type=\"matrix\" values=\"1 0 0 0 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 1 0 0 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 0 1 0 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 0 0 255 -140\" />\r\n\t\t        </filter>\r\n\t\t      </defs>\r\n\t\t    </svg>\r\n\t\t    <input id=\"etheraccount\" type=\"hidden\" value={defaultAccount}></input>\r\n\t\t    <input id=\"price\" type=\"hidden\" value={price}></input>\r\n\t\t    <input id=\"size\" type=\"hidden\" value={size}></input>\r\n\t\t    <input id=\"maxMint\" type=\"hidden\" value={maxMint}></input>\r\n\t\t    <input id=\"sold\" type=\"hidden\" value={sold}></input>\r\n\t\t    <input id=\"status\" type=\"hidden\" value={statusText}></input>\r\n\t\t    <div className=\"flex justify-between w-full uppercase px-4 text-sm tracking-widest\">\r\n\t\t      <span> Price </span>\r\n\t\t      <span> total minted </span>\r\n\t\t    </div>\r\n\t\t    <div className=\"flex justify-between w-full font-bold px-4 text-xl\">\r\n\t\t      <span> {price} </span>\r\n\t\t      <span> {sold} / {size} </span>\r\n\t\t    </div>\r\n\t\t    <div className=\"h-full gap-4 w-full mt-9\">\r\n\t\t      <button className=\"connect bg-white w-full text-black rounded-full px-8 py-3.5 transform duration-200 hover:scale-90 font-avenir-bold text-xl snip-button\" onClick={connectWalletHandler} id=\"connectWallet\"> {connectText} </button>\r\n\t\t      <div id=\"mintform\">\r\n\t\t\t\t<form className=\"form\" onSubmit={Mint}>\r\n\t\t          <input className=\"in\" type=\"hidden\" placeholder=\"Account\" value={defaultAccount} />\r\n\t\t          <div>\r\n\t\t            <center className=\"center\">\r\n\t\t                <input className=\"numberstyle\" type=\"number\" min=\"1\" step=\"1\" max=\"10\" value=\"1\" />\r\n\t\t            </center>\r\n\t\t          </div>\r\n\t\t          <br />\r\n\t\t          <button className=\"mint bg-white w-full text-black rounded-full px-8 py-3.5 transform duration-200 hover:scale-90 font-avenir-bold text-xl snip-button\" type=\"submit\">Loading..</button>\r\n\t\t\t\t  <div className=\"disconnect\"><a href=\"#\" onClick={Disconnect}>disconnect wallet</a></div>\r\n\t\t\t\t</form>\r\n\t\t      </div>\r\n\t\t    </div>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyComponent;","import MyComponent from './MyComponent';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MyComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}